{"version":3,"file":"static/js/75.959f0879.chunk.js","mappings":"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","sources":["components/Layout/Header/Header.tsx","components/Layout/Layout.tsx"],"sourcesContent":["import AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport AdbIcon from '@mui/icons-material/Adb';\nimport { MouseEvent, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AppRoutes } from '../../../containers/AppRouter/AppRouter';\n\nconst settings = ['Profile', 'Account', 'Logout'];\n\nconst Header = () => {\n  const [anchorElNav, setAnchorElNav] = useState<null | HTMLElement>(null);\n  const [anchorElUser, setAnchorElUser] = useState<null | HTMLElement>(null);\n\n  const navigate = useNavigate();\n\n  const pages = [\n    { title: 'Main', onClick: () => navigate(AppRoutes.mainPage) },\n    { title: 'Page2', onClick: () => navigate(AppRoutes.page2) },\n  ];\n\n  const handleOpenNavMenu = (event: MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event: MouseEvent<HTMLElement>) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Box\n            sx={{\n              display: 'flex',\n              cursor: 'pointer',\n            }}\n            onClick={() => navigate('/')}\n          >\n            <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"a\"\n              sx={{\n                mr: 2,\n                display: { xs: 'none', md: 'flex' },\n                fontFamily: 'monospace',\n                fontWeight: 700,\n                letterSpacing: '.3rem',\n                color: 'inherit',\n                textDecoration: 'none',\n              }}\n            >\n              CRYPTA\n            </Typography>\n          </Box>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page.title} onClick={handleCloseNavMenu}>\n                  <Typography onClick={page.onClick} textAlign=\"center\">\n                    {page.title}\n                  </Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            sx={{\n              mr: 2,\n              display: { xs: 'flex', md: 'none' },\n              flexGrow: 1,\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n              cursor: 'pointer',\n            }}\n            onClick={() => navigate('/')}\n          >\n            CRYPTA\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages\n              .filter(({ title }) => title !== 'Main')\n              .map((page) => (\n                <Button\n                  key={page.title}\n                  onClick={() => {\n                    handleCloseNavMenu();\n                    page.onClick();\n                  }}\n                  sx={{ my: 2, color: 'white', display: 'block' }}\n                >\n                  {page.title}\n                </Button>\n              ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Header;\n","import { Box } from '@mui/material';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Header } from './Header';\n\nconst Layout = () => {\n  return (\n    <Box\n      sx={{ backgroundColor: '#14262a', minHeight: '100vh', color: 'white' }}\n    >\n      <Header />\n      <main>\n        <Suspense fallback={<div> ... Загрузка</div>}>\n          <Outlet />\n        </Suspense>\n      </main>\n    </Box>\n  );\n};\n\nexport default Layout;\n"],"names":["settings","useState","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","navigate","useNavigate","pages","title","onClick","AppRoutes","handleCloseNavMenu","handleCloseUserMenu","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Box","sx","display","cursor","Adb","xs","md","mr","Typography","variant","noWrap","component","fontFamily","fontWeight","letterSpacing","color","textDecoration","flexGrow","IconButton","size","event","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","textAlign","filter","Button","my","Tooltip","p","Avatar","alt","src","mt","setting","backgroundColor","minHeight","Suspense","fallback"],"sourceRoot":""}